<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on nivaldogmelo</title><link>https://nivaldogmelo.github.io/tags/golang/</link><description>Recent content in Golang on nivaldogmelo</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 13 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://nivaldogmelo.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Structuring a Terraform project pt1</title><link>https://nivaldogmelo.github.io/posts/structuring-terraform-pt1/</link><pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate><guid>https://nivaldogmelo.github.io/posts/structuring-terraform-pt1/</guid><description>Structuring a Terraform project Pt.1 Link to heading As we know, Terraform is one of the most popular tools when we talk about declarative Infrastructure as Code (IAC). However, one aspect that often feels a bit unclear for me is how to structure projects effectively. While it&amp;rsquo;s easy to find tutorials on best practices for naming resources, figuring out the right folder structure can be more challenging. Should you use modules?</description></item><item><title>Building a Simple Port Scanner with GO</title><link>https://nivaldogmelo.github.io/posts/go-port-scanner/</link><pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate><guid>https://nivaldogmelo.github.io/posts/go-port-scanner/</guid><description>Building a Simple Port-Scanner with Go Link to heading These days I wanted to make a new project with go, so I went to the programming challenges page and searched for something, the port scanner caught my attention, so I decided to went for it.
Disclaimer Link to heading What we&amp;rsquo;re gonna use build can&amp;rsquo;t be used against servers which you don&amp;rsquo;t have a permission to run. Read this to understand more</description></item></channel></rss>